basePath: /kubepi/api/v1
definitions:
  api.Page:
    properties:
      items: {}
      total:
        type: integer
    type: object
  docs.Authenticate:
    properties:
      password:
        type: string
    type: object
  docs.Mfa:
    properties:
      enable:
        type: boolean
    type: object
  docs.UserCreate:
    properties:
      authenticate:
        $ref: '#/definitions/docs.Authenticate'
      email:
        type: string
      isAdmin:
        type: boolean
      mfa:
        $ref: '#/definitions/docs.Mfa'
      name:
        type: string
      nickName:
        type: string
      roles:
        items:
          type: string
        type: array
    type: object
  imagerepo.Credential:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  imagerepo.ImageRepo:
    properties:
      allowAnonymous:
        type: boolean
      apiVersion:
        type: string
      auth:
        type: boolean
      builtIn:
        type: boolean
      createAt:
        type: string
      createdBy:
        type: string
      credential:
        $ref: '#/definitions/imagerepo.Credential'
      description:
        type: string
      downloadUrl:
        type: string
      endPoint:
        type: string
      kind:
        type: string
      name:
        type: string
      repoName:
        type: string
      type:
        type: string
      updateAt:
        type: string
      uuid:
        type: string
      version:
        type: string
    type: object
  imagerepo.RepoConfig:
    properties:
      allowAnonymous:
        type: boolean
      apiVersion:
        type: string
      auth:
        type: boolean
      builtIn:
        type: boolean
      continueToken:
        type: string
      createAt:
        type: string
      createdBy:
        type: string
      credential:
        $ref: '#/definitions/imagerepo.Credential'
      description:
        type: string
      downloadUrl:
        type: string
      endPoint:
        type: string
      kind:
        type: string
      limit:
        type: integer
      name:
        type: string
      page:
        type: integer
      repoName:
        type: string
      search:
        type: string
      type:
        type: string
      updateAt:
        type: string
      uuid:
        type: string
      version:
        type: string
    required:
    - limit
    - page
    type: object
  imagerepo.RepoResponse:
    properties:
      continueToken:
        type: string
      items:
        items:
          type: string
        type: array
    type: object
  role.PolicyRule:
    properties:
      resource:
        items:
          type: string
        type: array
      resourceNames:
        items:
          type: string
        type: array
      verbs:
        items:
          type: string
        type: array
    type: object
  role.Role:
    properties:
      apiVersion:
        type: string
      builtIn:
        type: boolean
      createAt:
        type: string
      createdBy:
        type: string
      description:
        type: string
      kind:
        type: string
      name:
        type: string
      rules:
        items:
          $ref: '#/definitions/role.PolicyRule'
        type: array
      updateAt:
        type: string
      uuid:
        type: string
    type: object
  user.Authenticate:
    properties:
      password:
        type: string
      token:
        type: string
    type: object
  user.Mfa:
    properties:
      enable:
        type: boolean
      secret:
        type: string
    type: object
  user.User:
    properties:
      apiVersion:
        type: string
      authenticate:
        $ref: '#/definitions/user.Authenticate'
      builtIn:
        type: boolean
      createAt:
        type: string
      createdBy:
        type: string
      description:
        type: string
      email:
        type: string
      isAdmin:
        type: boolean
      kind:
        type: string
      language:
        type: string
      mfa:
        $ref: '#/definitions/user.Mfa'
      name:
        type: string
      nickName:
        type: string
      type:
        type: string
      updateAt:
        type: string
      uuid:
        type: string
    type: object
info:
  contact:
    email: support@fit2cloud.com
    name: Fit2cloud Support
    url: https://www.fit2cloud.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://kubeoperator.io
  title: KubePi Restful API
paths:
  /imagerepos:
    post:
      consumes:
      - application/json
      description: Create repo
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/imagerepo.RepoConfig'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/imagerepo.RepoConfig'
      security:
      - ApiKeyAuth: []
      summary: Create repo
      tags:
      - repos
  /imagerepos/{cluster}/{repo}:
    put:
      consumes:
      - application/json
      description: Get images for cluster
      parameters:
      - description: 集群名称
        in: path
        name: cluster
        required: true
        type: string
      - description: 镜像仓库名称
        in: path
        name: repo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      security:
      - ApiKeyAuth: []
      summary: List images for cluster
      tags:
      - repos
  /imagerepos/{name}:
    delete:
      consumes:
      - application/json
      description: Delete repo by name
      parameters:
      - description: 镜像仓库名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/imagerepo.ImageRepo'
      security:
      - ApiKeyAuth: []
      summary: Delete repo by name
      tags:
      - repos
    get:
      consumes:
      - application/json
      description: Get repo by name
      parameters:
      - description: 镜像仓库名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/imagerepo.ImageRepo'
      security:
      - ApiKeyAuth: []
      summary: Get repo by name
      tags:
      - repos
    put:
      consumes:
      - application/json
      description: Update repo by name
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/imagerepo.RepoConfig'
      - description: 镜像仓库名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/imagerepo.ImageRepo'
      security:
      - ApiKeyAuth: []
      summary: Update repo by name
      tags:
      - repos
  /imagerepos/{repo}/search:
    get:
      consumes:
      - application/json
      description: Get images by repo
      parameters:
      - description: 镜像仓库名称
        in: path
        name: repo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/imagerepo.RepoResponse'
      security:
      - ApiKeyAuth: []
      summary: List images by repo
      tags:
      - repos
  /imagerepos/cluster/{cluster}:
    get:
      consumes:
      - application/json
      description: Get repo for cluster
      parameters:
      - description: 集群名称
        in: path
        name: cluster
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/imagerepo.ImageRepo'
            type: array
      security:
      - ApiKeyAuth: []
      summary: List repo for cluster
      tags:
      - repos
  /imagerepos/repositories/search:
    post:
      consumes:
      - application/json
      description: List Internal repos
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/imagerepo.RepoConfig'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      security:
      - ApiKeyAuth: []
      summary: List Internal repos
      tags:
      - repos
  /roles:
    get:
      consumes:
      - application/json
      description: List all roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/role.Role'
            type: array
      security:
      - ApiKeyAuth: []
      summary: List all roles
      tags:
      - roles
    post:
      consumes:
      - application/json
      description: Create role
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/role.Role'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/role.Role'
      security:
      - ApiKeyAuth: []
      summary: Create role
      tags:
      - roles
  /roles/{name}:
    delete:
      consumes:
      - application/json
      description: Delete role by name
      parameters:
      - description: 角色名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/role.Role'
      security:
      - ApiKeyAuth: []
      summary: Delete role by name
      tags:
      - roles
    get:
      consumes:
      - application/json
      description: Get role by name
      parameters:
      - description: 权限名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/role.Role'
      security:
      - ApiKeyAuth: []
      summary: Get role by name
      tags:
      - roles
    put:
      consumes:
      - application/json
      description: Update role by name
      parameters:
      - description: 角色名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/role.Role'
      security:
      - ApiKeyAuth: []
      summary: Update role by name
      tags:
      - roles
  /users:
    get:
      consumes:
      - application/json
      description: List all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.User'
            type: array
      security:
      - ApiKeyAuth: []
      summary: List all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create user
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/docs.UserCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
      security:
      - ApiKeyAuth: []
      summary: Create user
      tags:
      - users
  /users/{name}:
    delete:
      consumes:
      - application/json
      description: Delete user by name
      parameters:
      - description: 用户名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
      security:
      - ApiKeyAuth: []
      summary: Delete user by name
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get user by name
      parameters:
      - description: 用户名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
      security:
      - ApiKeyAuth: []
      summary: Get user by name
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user by name
      parameters:
      - description: 用户名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
      security:
      - ApiKeyAuth: []
      summary: Update user by name
      tags:
      - users
  /users/search:
    post:
      consumes:
      - application/json
      description: Search users by Condition
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Page'
      security:
      - ApiKeyAuth: []
      summary: Search users
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
