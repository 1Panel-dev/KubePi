basePath: /kubepi/api/v1
definitions:
  api.Page:
    properties:
      items: {}
      total:
        type: integer
    type: object
  cluster.Authentication:
    properties:
      bearerToken:
        type: string
      certificate:
        $ref: '#/definitions/cluster.Certificate'
      configFileContent:
        items:
          type: integer
        type: array
      mode:
        type: string
    type: object
  cluster.Certificate:
    properties:
      certData:
        items:
          type: integer
        type: array
      keyData:
        items:
          type: integer
        type: array
    type: object
  cluster.Cluster:
    properties:
      apiVersion:
        type: string
      builtIn:
        type: boolean
      caCertificate:
        $ref: '#/definitions/cluster.Certificate'
      createAt:
        type: string
      createdBy:
        type: string
      description:
        type: string
      kind:
        type: string
      labels:
        items:
          type: string
        type: array
      name:
        type: string
      privateKey:
        items:
          type: integer
        type: array
      spec:
        $ref: '#/definitions/cluster.Spec'
      status:
        $ref: '#/definitions/cluster.Status'
      updateAt:
        type: string
      uuid:
        type: string
    type: object
  cluster.Connect:
    properties:
      direction:
        type: string
      forward:
        $ref: '#/definitions/cluster.Forward'
    type: object
  cluster.CreateRepo:
    properties:
      cluster:
        type: string
      repos:
        items:
          type: string
        type: array
    type: object
  cluster.Forward:
    properties:
      apiServer:
        type: string
      proxy:
        $ref: '#/definitions/cluster.Proxy'
    type: object
  cluster.Member:
    properties:
      bindingName:
        type: string
      clusterRoles:
        items:
          type: string
        type: array
      createAt:
        type: string
      name:
        type: string
      namespaceRoles:
        items:
          $ref: '#/definitions/cluster.NamespaceRoles'
        type: array
    type: object
  cluster.NamespaceRoles:
    properties:
      namespace:
        type: string
      roles:
        items:
          type: string
        type: array
    type: object
  cluster.Proxy:
    properties:
      password:
        type: string
      url:
        type: string
      username:
        type: string
    type: object
  cluster.Spec:
    properties:
      authentication:
        $ref: '#/definitions/cluster.Authentication'
      connect:
        $ref: '#/definitions/cluster.Connect'
      local:
        type: boolean
    type: object
  cluster.Status:
    properties:
      message:
        type: string
      phase:
        type: string
      version:
        type: string
    type: object
  cluster.UpdateCluster:
    properties:
      labels:
        items:
          type: string
        type: array
    type: object
  clusterrepo.ClusterRepo:
    properties:
      apiVersion:
        type: string
      builtIn:
        type: boolean
      cluster:
        type: string
      createAt:
        type: string
      createdBy:
        type: string
      description:
        type: string
      kind:
        type: string
      name:
        type: string
      repo:
        type: string
      updateAt:
        type: string
      uuid:
        type: string
    type: object
  docs.Authenticate:
    properties:
      password:
        type: string
    type: object
  docs.Mfa:
    properties:
      enable:
        type: boolean
    type: object
  docs.UserCreate:
    properties:
      authenticate:
        $ref: '#/definitions/docs.Authenticate'
      email:
        type: string
      isAdmin:
        type: boolean
      mfa:
        $ref: '#/definitions/docs.Mfa'
      name:
        type: string
      nickName:
        type: string
      roles:
        items:
          type: string
        type: array
    type: object
  imagerepo.Credential:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  imagerepo.ImageRepo:
    properties:
      allowAnonymous:
        type: boolean
      apiVersion:
        type: string
      auth:
        type: boolean
      builtIn:
        type: boolean
      createAt:
        type: string
      createdBy:
        type: string
      credential:
        $ref: '#/definitions/imagerepo.Credential'
      description:
        type: string
      downloadUrl:
        type: string
      endPoint:
        type: string
      kind:
        type: string
      name:
        type: string
      repoName:
        type: string
      type:
        type: string
      updateAt:
        type: string
      uuid:
        type: string
      version:
        type: string
    type: object
  imagerepo.RepoConfig:
    properties:
      allowAnonymous:
        type: boolean
      apiVersion:
        type: string
      auth:
        type: boolean
      builtIn:
        type: boolean
      continueToken:
        type: string
      createAt:
        type: string
      createdBy:
        type: string
      credential:
        $ref: '#/definitions/imagerepo.Credential'
      description:
        type: string
      downloadUrl:
        type: string
      endPoint:
        type: string
      kind:
        type: string
      limit:
        type: integer
      name:
        type: string
      page:
        type: integer
      repoName:
        type: string
      search:
        type: string
      type:
        type: string
      updateAt:
        type: string
      uuid:
        type: string
      version:
        type: string
    required:
    - limit
    - page
    type: object
  imagerepo.RepoResponse:
    properties:
      continueToken:
        type: string
      items:
        items:
          type: string
        type: array
    type: object
  role.PolicyRule:
    properties:
      resource:
        items:
          type: string
        type: array
      resourceNames:
        items:
          type: string
        type: array
      verbs:
        items:
          type: string
        type: array
    type: object
  role.Role:
    properties:
      apiVersion:
        type: string
      builtIn:
        type: boolean
      createAt:
        type: string
      createdBy:
        type: string
      description:
        type: string
      kind:
        type: string
      name:
        type: string
      rules:
        items:
          $ref: '#/definitions/role.PolicyRule'
        type: array
      updateAt:
        type: string
      uuid:
        type: string
    type: object
  user.Authenticate:
    properties:
      password:
        type: string
      token:
        type: string
    type: object
  user.Mfa:
    properties:
      enable:
        type: boolean
      secret:
        type: string
    type: object
  user.User:
    properties:
      apiVersion:
        type: string
      authenticate:
        $ref: '#/definitions/user.Authenticate'
      builtIn:
        type: boolean
      createAt:
        type: string
      createdBy:
        type: string
      description:
        type: string
      email:
        type: string
      isAdmin:
        type: boolean
      kind:
        type: string
      language:
        type: string
      mfa:
        $ref: '#/definitions/user.Mfa'
      name:
        type: string
      nickName:
        type: string
      type:
        type: string
      updateAt:
        type: string
      uuid:
        type: string
    type: object
  v1.AggregationRule:
    properties:
      clusterRoleSelectors:
        description: |-
          ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules.
          If any of the selectors match, then the ClusterRole's permissions will be added
          +optional
        items:
          $ref: '#/definitions/v1.LabelSelector'
        type: array
    type: object
  v1.ClusterRole:
    properties:
      aggregationRule:
        $ref: '#/definitions/v1.AggregationRule'
        description: |-
          AggregationRule is an optional field that describes how to build the Rules for this ClusterRole.
          If AggregationRule is set, then the Rules are controller managed and direct changes to Rules will be
          stomped by the controller.
          +optional
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          Finalizers may be processed and removed in any order.  Order is NOT enforced
          because it introduces significant risk of stuck finalizers.
          finalizers is a shared field, any actor with permission can reorder it.
          If the finalizer list is processed in order, then this can lead to a situation
          in which the component responsible for the first finalizer in the list is
          waiting for a signal (field value, external system, or other) produced by a
          component responsible for a finalizer later in the list, resulting in a deadlock.
          Without enforced ordering finalizers are free to order amongst themselves and
          are not vulnerable to ordering changes in the list.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      managedFields:
        description: |-
          ManagedFields maps workflow-id and version to the set of fields
          that are managed by that workflow. This is mostly for internal
          housekeeping, and users typically shouldn't need to set or
          understand this field. A workflow can be the user's name, a
          controller's name, or the name of a specific apply path like
          "ci-cd". The set of fields is always in the version that the
          workflow used when modifying the object.

          +optional
        items:
          $ref: '#/definitions/v1.ManagedFieldsEntry'
        type: array
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within which each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      rules:
        description: |-
          Rules holds all the PolicyRules for this ClusterRole
          +optional
        items:
          $ref: '#/definitions/v1.PolicyRule'
        type: array
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.

          DEPRECATED
          Kubernetes will stop propagating this field in 1.20 release and the field is planned
          to be removed in 1.21 release.
          +optional
        type: string
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.FieldsV1:
    type: object
  v1.LabelSelector:
    properties:
      matchExpressions:
        description: |-
          matchExpressions is a list of label selector requirements. The requirements are ANDed.
          +optional
        items:
          $ref: '#/definitions/v1.LabelSelectorRequirement'
        type: array
      matchLabels:
        additionalProperties:
          type: string
        description: |-
          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
          map is equivalent to an element of matchExpressions, whose key field is "key", the
          operator is "In", and the values array contains only "value". The requirements are ANDed.
          +optional
        type: object
    type: object
  v1.LabelSelectorRequirement:
    properties:
      key:
        description: |-
          key is the label key that the selector applies to.
          +patchMergeKey=key
          +patchStrategy=merge
        type: string
      operator:
        description: |-
          operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        type: string
      values:
        description: |-
          values is an array of string values. If the operator is In or NotIn,
          the values array must be non-empty. If the operator is Exists or DoesNotExist,
          the values array must be empty. This array is replaced during a strategic
          merge patch.
          +optional
        items:
          type: string
        type: array
    type: object
  v1.ManagedFieldsEntry:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the version of this resource that this field set
          applies to. The format is "group/version" just like the top-level
          APIVersion field. It is necessary to track the version of a field
          set because it cannot be automatically converted.
        type: string
      fieldsType:
        description: |-
          FieldsType is the discriminator for the different fields format and version.
          There is currently only one possible value: "FieldsV1"
        type: string
      fieldsV1:
        $ref: '#/definitions/v1.FieldsV1'
        description: |-
          FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
          +optional
      manager:
        description: Manager is an identifier of the workflow managing these fields.
        type: string
      operation:
        description: |-
          Operation is the type of operation which lead to this ManagedFieldsEntry being created.
          The only valid values for this field are 'Apply' and 'Update'.
        type: string
      subresource:
        description: |-
          Subresource is the name of the subresource used to update that object, or
          empty string if the object was updated through the main resource. The
          value of this field is used to distinguish between managers, even if they
          share the same name. For example, a status update will be distinct from a
          regular update using the same manager name.
          Note that the APIVersion field is not related to the Subresource field and
          it always corresponds to the version of the main resource.
        type: string
      time:
        description: |-
          Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'
          +optional
        type: string
    type: object
  v1.OwnerReference:
    properties:
      apiVersion:
        description: API version of the referent.
        type: string
      blockOwnerDeletion:
        description: |-
          If true, AND if the owner has the "foregroundDeletion" finalizer, then
          the owner cannot be deleted from the key-value store until this
          reference is removed.
          Defaults to false.
          To set this field, a user needs "delete" permission of the owner,
          otherwise 422 (Unprocessable Entity) will be returned.
          +optional
        type: boolean
      controller:
        description: |-
          If true, this reference points to the managing controller.
          +optional
        type: boolean
      kind:
        description: |-
          Kind of the referent.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        type: string
      name:
        description: |-
          Name of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
        type: string
      uid:
        description: |-
          UID of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
        type: string
    type: object
  v1.PolicyRule:
    properties:
      apiGroups:
        description: |-
          APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of
          the enumerated resources in any API group will be allowed.
          +optional
        items:
          type: string
        type: array
      nonResourceURLs:
        description: |-
          NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path
          Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.
          Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
          +optional
        items:
          type: string
        type: array
      resourceNames:
        description: |-
          ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.
          +optional
        items:
          type: string
        type: array
      resources:
        description: |-
          Resources is a list of resources this rule applies to. '*' represents all resources.
          +optional
        items:
          type: string
        type: array
      verbs:
        description: Verbs is a list of Verbs that apply to ALL the ResourceKinds
          and AttributeRestrictions contained in this rule. '*' represents all verbs.
        items:
          type: string
        type: array
    type: object
info:
  contact:
    email: support@fit2cloud.com
    name: Fit2cloud Support
    url: https://www.fit2cloud.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://kubeoperator.io
  title: KubePi Restful API
paths:
  /clusters:
    get:
      consumes:
      - application/json
      description: List all clusters
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/cluster.Cluster'
            type: array
      security:
      - ApiKeyAuth: []
      summary: List all clusters
      tags:
      - clusters
    post:
      consumes:
      - application/json
      description: Create Cluster
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/cluster.Cluster'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cluster.Cluster'
      security:
      - ApiKeyAuth: []
      summary: Create Cluster
      tags:
      - clusters
  /clusters/{cluster}/clusterroles:
    get:
      consumes:
      - application/json
      description: List all clusterRoles
      parameters:
      - description: 集群名称
        in: path
        name: cluster
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.ClusterRole'
            type: array
      security:
      - ApiKeyAuth: []
      summary: List all clusterRoles
      tags:
      - clusters
    post:
      consumes:
      - application/json
      description: Create Cluster Role
      parameters:
      - description: 集群名称
        in: path
        name: cluster
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.ClusterRole'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.ClusterRole'
      security:
      - ApiKeyAuth: []
      summary: Create Cluster Role
      tags:
      - clusters
  /clusters/{cluster}/clusterroles/{clusterrole}:
    delete:
      consumes:
      - application/json
      description: Delete clusterRole by name
      parameters:
      - description: 集群名称
        in: path
        name: cluster
        required: true
        type: string
      - description: 权限名称
        in: path
        name: clusterrole
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Delete clusterRole by name
      tags:
      - clusters
    put:
      consumes:
      - application/json
      description: Update Cluster Role
      parameters:
      - description: 集群名称
        in: path
        name: cluster
        required: true
        type: string
      - description: 权限名称
        in: path
        name: clusterrole
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.ClusterRole'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.ClusterRole'
      security:
      - ApiKeyAuth: []
      summary: Update Cluster Role
      tags:
      - clusters
  /clusters/{cluster}/members:
    get:
      consumes:
      - application/json
      description: List all ClusterMembers
      parameters:
      - description: 集群名称
        in: path
        name: cluster
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/cluster.Member'
            type: array
      security:
      - ApiKeyAuth: []
      summary: List all ClusterMembers
      tags:
      - clusters
    post:
      consumes:
      - application/json
      description: Create Cluster Member
      parameters:
      - description: 集群名称
        in: path
        name: cluster
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/cluster.Member'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cluster.Member'
      security:
      - ApiKeyAuth: []
      summary: Create Cluster Member
      tags:
      - clusters
  /clusters/{cluster}/members/{member}:
    delete:
      consumes:
      - application/json
      description: Delete clusterMember by name
      parameters:
      - description: 集群名称
        in: path
        name: cluster
        required: true
        type: string
      - description: 成员名称
        in: path
        name: members
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Delete clusterMember by name
      tags:
      - clusters
    get:
      consumes:
      - application/json
      description: Get Cluster Member By name
      parameters:
      - description: 集群名称
        in: path
        name: cluster
        required: true
        type: string
      - description: 成员名称
        in: path
        name: member
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cluster.Member'
      security:
      - ApiKeyAuth: []
      summary: Get Cluster Member By name
      tags:
      - clusters
    put:
      consumes:
      - application/json
      description: Update Cluster Member
      parameters:
      - description: 集群名称
        in: path
        name: cluster
        required: true
        type: string
      - description: 成员名称
        in: path
        name: member
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/cluster.Member'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cluster.Member'
      security:
      - ApiKeyAuth: []
      summary: Update Cluster Member
      tags:
      - clusters
  /clusters/{cluster}/repos:
    get:
      consumes:
      - application/json
      description: Get ClusterRepo Detail
      parameters:
      - description: 集群名称
        in: path
        name: cluster
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/imagerepo.ImageRepo'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get ClusterRepo Detail
      tags:
      - clusters
    post:
      consumes:
      - application/json
      description: Create Cluster Repo
      parameters:
      - description: 集群名称
        in: path
        name: cluster
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/cluster.CreateRepo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cluster.CreateRepo'
      security:
      - ApiKeyAuth: []
      summary: Create Cluster Repo
      tags:
      - clusters
  /clusters/{cluster}/repos/{repo}:
    delete:
      consumes:
      - application/json
      description: Delete clusterRepo by name
      parameters:
      - description: 集群名称
        in: path
        name: cluster
        required: true
        type: string
      - description: 镜像仓库名称
        in: path
        name: repo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Delete clusterRepo by name
      tags:
      - clusters
  /clusters/{name}:
    delete:
      consumes:
      - application/json
      description: Delete cluster by name
      parameters:
      - description: 集群名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cluster.Cluster'
      security:
      - ApiKeyAuth: []
      summary: Delete cluster by name
      tags:
      - clusters
    get:
      consumes:
      - application/json
      description: Get cluster by name
      parameters:
      - description: 集群名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cluster.Cluster'
      security:
      - ApiKeyAuth: []
      summary: Get cluster by name
      tags:
      - clusters
    put:
      consumes:
      - application/json
      description: Update cluster by name
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/cluster.UpdateCluster'
      - description: 集群名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cluster.UpdateCluster'
      security:
      - ApiKeyAuth: []
      summary: Update cluster by name
      tags:
      - clusters
  /imagerepos:
    post:
      consumes:
      - application/json
      description: Create repo
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/imagerepo.RepoConfig'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/imagerepo.RepoConfig'
      security:
      - ApiKeyAuth: []
      summary: Create repo
      tags:
      - repos
  /imagerepos/{cluster}/{repo}:
    put:
      consumes:
      - application/json
      description: Get images for cluster
      parameters:
      - description: 集群名称
        in: path
        name: cluster
        required: true
        type: string
      - description: 镜像仓库名称
        in: path
        name: repo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      security:
      - ApiKeyAuth: []
      summary: List images for cluster
      tags:
      - repos
  /imagerepos/{name}:
    delete:
      consumes:
      - application/json
      description: Delete repo by name
      parameters:
      - description: 镜像仓库名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/imagerepo.ImageRepo'
      security:
      - ApiKeyAuth: []
      summary: Delete repo by name
      tags:
      - repos
    get:
      consumes:
      - application/json
      description: Get repo by name
      parameters:
      - description: 镜像仓库名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/imagerepo.ImageRepo'
      security:
      - ApiKeyAuth: []
      summary: Get repo by name
      tags:
      - repos
    put:
      consumes:
      - application/json
      description: Update repo by name
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/imagerepo.RepoConfig'
      - description: 镜像仓库名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/imagerepo.ImageRepo'
      security:
      - ApiKeyAuth: []
      summary: Update repo by name
      tags:
      - repos
  /imagerepos/{repo}/search:
    get:
      consumes:
      - application/json
      description: Get images by repo
      parameters:
      - description: 镜像仓库名称
        in: path
        name: repo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/imagerepo.RepoResponse'
      security:
      - ApiKeyAuth: []
      summary: List images by repo
      tags:
      - repos
  /imagerepos/cluster/{cluster}:
    get:
      consumes:
      - application/json
      description: Get repo for cluster
      parameters:
      - description: 集群名称
        in: path
        name: cluster
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/imagerepo.ImageRepo'
            type: array
      security:
      - ApiKeyAuth: []
      summary: List repo for cluster
      tags:
      - repos
  /imagerepos/repositories/search:
    post:
      consumes:
      - application/json
      description: List Internal repos
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/imagerepo.RepoConfig'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      security:
      - ApiKeyAuth: []
      summary: List Internal repos
      tags:
      - repos
  /roles:
    get:
      consumes:
      - application/json
      description: List all roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/role.Role'
            type: array
      security:
      - ApiKeyAuth: []
      summary: List all roles
      tags:
      - roles
    post:
      consumes:
      - application/json
      description: Create role
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/role.Role'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/role.Role'
      security:
      - ApiKeyAuth: []
      summary: Create role
      tags:
      - roles
  /roles/{name}:
    delete:
      consumes:
      - application/json
      description: Delete role by name
      parameters:
      - description: 角色名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/role.Role'
      security:
      - ApiKeyAuth: []
      summary: Delete role by name
      tags:
      - roles
    get:
      consumes:
      - application/json
      description: Get role by name
      parameters:
      - description: 权限名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/role.Role'
      security:
      - ApiKeyAuth: []
      summary: Get role by name
      tags:
      - roles
    put:
      consumes:
      - application/json
      description: Update role by name
      parameters:
      - description: 角色名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/role.Role'
      security:
      - ApiKeyAuth: []
      summary: Update role by name
      tags:
      - roles
  /users:
    get:
      consumes:
      - application/json
      description: List all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.User'
            type: array
      security:
      - ApiKeyAuth: []
      summary: List all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create user
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/docs.UserCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
      security:
      - ApiKeyAuth: []
      summary: Create user
      tags:
      - users
  /users/{name}:
    delete:
      consumes:
      - application/json
      description: Delete user by name
      parameters:
      - description: 用户名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
      security:
      - ApiKeyAuth: []
      summary: Delete user by name
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get user by name
      parameters:
      - description: 用户名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
      security:
      - ApiKeyAuth: []
      summary: Get user by name
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user by name
      parameters:
      - description: 用户名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
      security:
      - ApiKeyAuth: []
      summary: Update user by name
      tags:
      - users
  /users/search:
    post:
      consumes:
      - application/json
      description: Search users by Condition
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Page'
      security:
      - ApiKeyAuth: []
      summary: Search users
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
